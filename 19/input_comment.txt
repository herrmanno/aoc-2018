#ip 3
start:
    0: addi 3 16 3     // jump to :init
    1: seti 1 6 5      // #5 = 1
loop1:
    2: seti 1 8 2      // #2 = 1
loop2:
    3: mulr 5 2 1      // #1 = #5 * #2
    4: eqrr 1 4 1      // #1 = #1 == #4
    5: addr 1 3 3      // if #1
    6: addi 3 1 3      // else: skip next line
    7: addr 5 0 0      // then: #0 = #5 + #0
    8: addi 2 1 2     // #2 = #2 + 1
    9: gtrr 2 4 1     // #1 = #2 > #4
    10: addr 3 1 3     // if #1
    11: seti 2 3 3     // else: jump loop2
    12: addi 5 1 5     // then: #5 = #5 + 1
    13: gtrr 5 4 1     // #1 = #5 > #4
    14: addr 1 3 3     // if #1
    15: seti 1 8 3     // else: jump to loop1
    18: mulr 3 3 3     // then: halt
init:
    17: addi 4 2 4     // #4 = #4 + 2
    18: mulr 4 4 4     // #4 = #4 * #4
    19: mulr 3 4 4     // #4 = #4 * 19
    20: muli 4 11 4    // #4 = #4 * 11
    21: addi 1 6 1     // #1 = #1 + 6
    22: mulr 1 3 1     // #1 = #1 * 22
    23: addi 1 10 1    // #1 = #1 + 10
    24: addr 4 1 4     // #4 = #4 * #1
    25: addr 3 0 3     // if #0 (0/1 on first invocation)
    26: seti 0 0 3     // else jump to 1
    27: setr 3 9 1     // then #1 = 28
    28: mulr 1 3 1     // #1 = #1 * 28
    29: addr 3 1 1     // #1 = #1 + 29
    30: mulr 3 1 1     // #1 = #1 * 30
    31: muli 1 14 1    // #1 = #1 * 14
    32: mulr 1 3 1     // #1 = #1 * 32
    33: addr 4 1 4     // #4 = #4 + #1
    34: seti 0 4 0     // #0 = 0
    35: seti 0 0 3     // jump to 1
